# 16진수, 8진수, 2진수: 리터럴과 변환

0o1, 0o20, 0o377                # 8진수 리터럴: 기수 8, 숫자 0-7(3.X, 2.6+)
# (1, 16, 255)
0x01, 0x10, 0xFF                # 16진수 리터럴: 기수 16, 숫자 0-9/A-F(3.X, 2.X)
# (1, 16, 255)
0b1, 0b10000, 0b11111111        # 2진수 리터럴: 기수 2, 숫자 0-1(3.X, 2.6+)
# (1, 16, 255)


0xFF, (15 * (16 ** 1)) + (15 * (16 ** 0)) # 16진수/2진수를 10진수로 변환하는 방법
# (255, 255)
0x2F, (2 * (16 ** 1)) + (15 * (16 ** 0))
# (47, 47)
0xF, 0b1111, (1*(2**3) + 1*(2**2) + 1*(2**1) + 1*(2**0))
# (15, 15, 15)


oct(64), hex(64), bin(64)       # 숫자 => 문자열로 된 숫자
# ('0o100', '0x40', '0b1000000')


64, 0o100, 0x40, 0b1000000      # 스크립트와 문자열에서 사용하는 숫자로 변환
# (64, 64, 64, 64)


int('64'), int('100', 8), int('40', 16), int('1000000', 2)
# (64, 64, 64, 64)

int('0x40', 16), int('0b1000000', 2) # 리터럴 형식 또한 지원됨
# (64, 64)


eval('64'), eval('0o100'), eval('0x40'), eval('0b1000000')
# (64, 64, 64, 64)


'{0:o}, {1:x}, {2:b}'.format(64, 64, 64) # 수 => 숫자, 2.6+
# '100, 40, 1000000'

'0%o, %x, %x, %X' % (64, 64, 255, 255)   # 모든 파이썬 버전에서 유사하게 사용 가능
# '0100, 40, ff, FF'


0o1, 0o20, 0o377                # 2.6+에서 추가된 8진수 형식
# (1, 16, 255)
01, 020, 0377                   # 모든 2.X에 적용되는 기존 8진수 리터럴(3.X에서 에러)


X = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF
X
# 5192296858534827628530496329220095
oct(X)
# '0o17777777777777777777777777777777777777'
bin(X)
# '0b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
