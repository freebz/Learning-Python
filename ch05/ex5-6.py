# 반내림 vs 버림

import math
math.floor(2.5)                 # 낮은 값 중에서 가장 가깡누 수
# 2
math.floor(-2.5)
# -3
math.trunc(2.5)                 # (0을 향해서) 소수 부분 날라 내기
# 2
math.trunc(-2.5)
# -2


# /python36/python
5 / 2, 5 / -2
# (2.5, -2.5)

5 // 2, 5 // -2                 # 낮은 값으로 버리기: 가까운 낮은 정수로 버리기
# (2, -3)                       # 2.5는 2가 되고, -2.5는 -3이 된다

5 / 2.0, 5 / -2.0
# (2.5, -2.5)

5 // 2.0, 5 // -2.0             # 피연산자가 부동 소수점 수인 경우, 결과도 부동 소수점 수
# (2.0, -3.0)


# /python27/python
5 / 2, 5 / -2                   # 3.X와의 차이점
# (2, -3)

5 // 2, 5 // -2                 # 여기서부터는 2.X와 3.X가 동일
# (2, -3)

5 / 2.0, 5 / -2.0
# (2.5, -2.5)

5 // 2.0, 5 // -2.0
# (2.0, -3.0)


# /python36/python
import math
5 / -2                          # 나머지 유지
# -2.5
5 // -2                         # 낮은 값으로 반내림
# -3
math.trunc(5 / -2)              # 반내림 대신 버림(int()와 같다)
# -2

# /python27/python
import math
5 / float(-2)                   # 2.X에서 나머지 유지 방법
# -2.5
5 / -2, 5 // -2                 # 2.X에서 반내림
# (-3, -3)
math.trunc(5 / float(-2))       # 2.X에서 버림
# -2
